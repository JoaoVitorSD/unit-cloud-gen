{
  "category": "two-pointers",
  "difficulty": "Medium",
  "problems": [
    {
      "id": "5",
      "title": "Longest Palindromic Substring",
      "slug": "longest-palindromic-substring",
      "difficulty": "Medium",
      "category": "two-pointers",
      "description": "Given a string s, return the longest palindromic substring in s. &nbsp;",
      "examples": [
        {
          "input": "s = &quot;babad&quot;",
          "output": "&quot;bab&quot;"
        },
        {
          "input": "s = &quot;cbbd&quot;",
          "output": "&quot;bb&quot;"
        }
      ],
      "top_solution": "function longestPalindrome(s) {\n    if (!s || s.length < 1) return '';\n    \n    let start = 0;\n    let end = 0;\n    \n    for (let i = 0; i < s.length; i++) {\n        const len1 = expandAroundCenter(s, i, i);\n        const len2 = expandAroundCenter(s, i, i + 1);\n        const len = Math.max(len1, len2);\n        \n        if (len > end - start) {\n            start = i - Math.floor((len - 1) / 2);\n            end = i + Math.floor(len / 2);\n        }\n    }\n    \n    return s.substring(start, end + 1);\n}\n\nfunction expandAroundCenter(s, left, right) {\n    while (left >= 0 && right < s.length && s[left] === s[right]) {\n        left--;\n        right++;\n    }\n    return right - left - 1;\n}\n\nmodule.exports = { longestPalindrome };",
      "acceptance_rate": 3647.64300706402,
      "likes": 0,
      "dislikes": 0
    }
  ]
}